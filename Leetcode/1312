// If you find longest palindromic sequence and then subtract it from size of string, you get your result.
class Solution {
public:
    int minInsertions(string s1) {
        string s2 = s1;
        reverse(s2.begin(), s2.end());
        int m = s1.length();
        int t[m+1][m+1];

        // Initialization
        for(int i=0; i<m+1; i++){
            t[i][0] = 0;
            t[0][i] = 0;
        }

        // Choice diagram implementation
        for(int i=1; i<m+1; i++){
            for(int j=1; j<m+1; j++){
                if(s1[i-1] == s2[j-1]){
                    t[i][j] = 1 + t[i-1][j-1];
                }
                else{
                    t[i][j] = max(t[i-1][j] , t[i][j-1]);
                }
            }
        }
        int lps = t[m][m];
        return m - lps;
    }
};

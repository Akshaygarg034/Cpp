class Solution {
public: 

    bool sameSign(int a,int b){
        if((a>0 && b>0) || (a<0 && b<0)){
            return true;
        }
        return false;
    }

    vector<int> asteroidCollision(vector<int>& a) {
        int n=a.size();
        vector<int> ans;
        stack<int> st;
        for(int i=0; i<n; i++){
            // Condition for No Collision 
            if(st.empty() || sameSign(st.top(),a[i]) || (st.top()<0 && a[i]>0)){
                st.push(a[i]);
            }

            // Condition for collision
            else{
                while(!st.empty() && st.top()>0 && st.top()<abs(a[i])){
                    st.pop();
                }

                if(st.empty() || st.top()<0){
                    st.push(a[i]);
                }

                if(st.top()==abs(a[i])){
                    st.pop();
                }
            }
        }

        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};

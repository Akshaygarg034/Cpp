// Prefix sum method
class Solution{
    public:
    int maxLen(vector<int>&A, int n)
    {   
        unordered_map<int, int> mp;
        int sum = 0;
        int maxi = 0;
        
        mp[0] = -1;
        for(int i=0; i<n; i++){
            sum += A[i];
            
            // We are finding, how much our sum is rgeater than required sum. i.e sum - 0 then finding it in map.
            if(mp.find(sum) != mp.end()){
                maxi = max(maxi, i - mp[sum]);
            }
            
            // only first occurence of such sum is stored in map to get longest subarray
            if(mp.find(sum) == mp.end()){
                mp[sum] = i;
            }
        }
        
        return maxi;
    }
};

class Solution
{
    public:
    void merge(int arr[], int l, int mid, int h)
    {
         int i = l, j = mid + 1;
         int k = 0;
         
         int temp[h - l + 1];
         
         while(i <= mid && j <= h){
             if(arr[i] < arr[j]){
                 temp[k] = arr[i];
                 i++;
                 k++;
             }
             
             else{
                 temp[k] = arr[j];
                 j++;
                 k++;
             }
         }
         
         while(i <= mid){
             temp[k] = arr[i];
             i++;
             k++;
         } 
         
         while(j <= h){
             temp[k] = arr[j];
             j++;
             k++;
         }
         
         for(int i= l; i<=h; i++){
             arr[i] = temp[i - l];
         }
         
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
        if(l < r){
            int mid = (l+r)/2;
            
            mergeSort(arr, l,  mid);
            mergeSort(arr, mid+1, r);
            
            merge(arr, l, mid, r);
        }
    }
};

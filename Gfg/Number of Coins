class Solution{

	public:
	int minCoins(int coins[], int n, int sum) 
	{ 
	    int t[n+1][sum+1];
	    
	   // Initialization
	   for(int j=0; j<sum+1; j++){
	       t[0][j] = INT_MAX - 1;
	       //Filling 2nd row
	       if(j % coins[0] == 0) t[1][j] = j / coins[0];
	       else t[1][j] = INT_MAX - 1;
	   }
	   for(int i=0; i<n+1; i++){
	       t[i][0] = 0;
	   }
	   
	   //Choice diagram implementation
	   for(int i=2; i<n+1; i++){
	       for(int j=1; j<sum+1; j++){
	           if(coins[i-1] <= j){
	               //Adding 1 because, if we select a coin, its count will increase by 1.
	               t[i][j] = min(1 + t[i][j-coins[i-1]] , t[i-1][j]);
	           }
	           else t[i][j] = t[i-1][j];
	       }
	   }
	   return (t[n][sum] == INT_MAX-1) ? -1: t[n][sum];
	} 
	  
};

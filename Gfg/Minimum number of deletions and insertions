// Firstly find lcs i.e "ea".
// No. of delete operations will be: s1 - "ea"
// No. of insert operations will be: s2 - "ea"

class Solution{
	public:
	int minOperations(string s1, string s2) 
	{ 
	    int m = s1.length();
	    int n = s2.length();
	    int t[m+1][n+1];
	    
	   // Initialization
	   for(int i=0; i<m+1; i++){
	       t[i][0] = 0;
	   }
	   for(int j=0; j<n+1; j++){
	       t[0][j] = 0;
	   }
	   
	   //Choice diagram implementation
	   for(int i=1; i<m+1; i++){
	       for(int j=1; j<n+1; j++){
	           if(s1[i-1] == s2[j-1]){
	               t[i][j] = 1 + t[i-1][j-1];
	           }
	           else{
	               t[i][j] = max(t[i-1][j], t[i][j-1]);
	           }
	       }
	   }
	   
	   int lcs = t[m][n];
	   int del = m - lcs;
	   int ins = n - lcs;
	   return del + ins;
	} 
};
